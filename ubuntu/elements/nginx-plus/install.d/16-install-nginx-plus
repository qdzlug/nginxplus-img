#!/bin/bash

# Create a work directory
echo "$(date)": Create Work Directory
WORKDIR=/tmp/nginx-plus.$$
mkdir $WORKDIR

# Setup SSH to allow passwords
echo "$(date)": Edit sshd_config to allow passwords
sed -i.bak -e 's/^[#]*PasswordAuthentication .*/PasswordAuthentication yes/' /etc/ssh/sshd_config

# Create the SSL Directory
echo "$(date)": Check the certs...
#mkdir -p /etc/ssl/nginx
ls -l /etc/ssl/nginx
cat /etc/ssl/nginx/*

# Fix the file permissions
echo "$(date)": Adjust Cert Permissions
chmod 644 /etc/ssl/nginx/nginx-repo.crt
chmod 644 /etc/ssl/nginx/nginx-repo.key

# Download and install the signing key
echo "$(date)": Install Signing Key
cd $WORKDIR || exit
#wget https://cs.nginx.com/static/keys/nginx_signing.key &&  apt-key add nginx_signing.key
curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | tee /usr/share/keyrings/nginx-archive-keyring.gpg

# Install the reqs
echo "$(date)": Install Prequisities
apt update
apt-get install -y apt-transport-https lsb-release ca-certificates

# Add the repo
echo "$(date)": Adding the NGINX Plus repo
printf "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://pkgs.nginx.com/plus/ubuntu $(lsb_release -cs) nginx-plus\n" | sudo tee /etc/apt/sources.list.d/nginx-plus.list
##echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg]  http://nginx.org/packages/ubuntu `lsb_release -cs` nginx" | tee /etc/apt/sources.list.d/nginx.list

# Download the nginx-plus apt configuration to /etc/apt/apt.conf.d:
echo "$(date)": Adding the NGINX Plus Apt Config
wget -P /etc/apt/apt.conf.d https://cs.nginx.com/static/files/90pkgs-nginx

# Update the repository information:
echo "$(date)": Updating the Repository
apt-get update

# Install the plus package
echo "$(date)": Installing the NGINX Plus package
apt-get install -y nginx-plus nginx-ha-keepalived nginx-sync

# Put in our config - doing it here to make sure it does not
# get confused with the package installed file
echo "$(date)": Installing the NGINX Plus sample config
cat > /etc/nginx/conf.d/default.conf << EOF
server {
    listen       80 default_server;
    server_name  localhost;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # API
    location /api/ {
        api write=on;
    }

    # Dashboard
    location = /dashboard.html {
        root /usr/share/nginx/html;
    }
}
EOF

# Validate the version
echo "$(date)": Validating the Version
/usr/sbin/nginx -v

# Clean up the certs
echo "$(date)": Cleaning the Certs
rm /etc/ssl/nginx/nginx-repo.crt || true
rm /etc/ssl/nginx/nginx-repo.key || true

# Cleaning the work directory
echo "$(date)": Cleaning the Work diretory
rm -rf $WORKDIR
