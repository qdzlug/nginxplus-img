pipeline {
  agent {
    node {
      label 'imagebuild'
    }
  }
  stages {
    stage('Checkout Scm') {
      steps {
      checkout([$class: 'GitSCM', branches: [[name: '**']], extensions: [[$class: 'PerBuildTag']],
                userRemoteConfigs: [[url: 'https://github.com/qdzlug/nginxplus-img']]])
      }
    }

    stage('Configure Environment') {
      steps {
        sh '''sudo apt -y install virtualenvwrapper qemu-utils python3-diskimage-builder
        virtualenv $WORKSPACE/dib-elements
        . $WORKSPACE/dib-elements/bin/activate
        pip install diskimage-builder
        '''
      }
    }

    stage('Build Image') {
      steps {
       configFileProvider([configFile(fileId: '0a0b590a-38b6-44b1-988c-1fd78d4fd7fc', targetLocation: 'debian/elements/nginx-plus/static/etc/ssl/nginx/nginx-repo.crt',
                           variable: 'NGINX_CERT'), configFile(fileId: 'e8bd0df6-0d9a-4564-b36c-844afd6c64d0',
                           targetLocation: 'debian/elements/nginx-plus/static/etc/ssl/nginx/nginx-repo.key', variable: 'NGINX_KEY')])
        {
          sh '''
          . $WORKSPACE/dib-elements/bin/activate
          export DIB_RELEASE=bullseye
          export DIB_DEBUG_TRACE=1
          export ELEMENTS_PATH=$WORKSPACE/debian/elements
          disk-image-create -a amd64 -o nginxplus-debian-$BUILD_ID.qcow2 block-device-mbr nginx-plus
          '''
        }
      }
    }

    stage('Archive Image') {
        steps {
          archiveArtifacts artifacts: '*.qcow2', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
        }
    }

    stage('Clean Workspace') {
       steps {
         cleanWs()
    }
   }
  }
}